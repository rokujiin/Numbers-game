
import java.util.*;
public class GameHalili
{
    //No code here
}
class Game {
    public static void main(String[] args) {
        Scanner kb = new Scanner(System.in);
        interact(kb);
        action(kb);
    }


    /*
    The purpose for this method is to ask the user to enter a positive integer
value
    This method gets two parameters Scanner and a string. The string s holds the
message being displayed for the user
     This method asks the user to enter a positive number.
     As long as the entered value is not positive, the method will keep asking the
user

     */
    public static int prompt(Scanner kb)
    {
        //1. declare a variable of type int to hold the user's input
        int s1;
        //2. prompt the user to enter a positive number
        System.out.println("\nEnter a positive number: ");
        //3. read the user's input using the kb object and store it in variable s
        s1 = kb.nextInt();
        //4. use a while loop to keep asking the user to enter a positive number as long as the user's input is not positive
        while(s1 <= 0)
        {
            System.out.println("Enter a positive number: ");
            s1 = kb.nextInt();
        }
        //5. return the user's input
        return s1;
    }

    /* This method displays the intro given in the sample output */
    public static void interact(Scanner kb)
    {
        System.out.println("Hello, I am a computer playing a guessing game with you. What would you like to call me?");
        String name = kb.next();
        //for loop to print a line of 50 stars
        for(int i = 0; i < 50; i++)
        {
            System.out.print("-");
        }
        //print a new line
        System.out.println("\nWow I really like the name "+name);
        //print a line with your name
        System.out.println("What is your name? ");
        String name1 = kb.next();
        System.out.print("Hey "+name1+" I am excited to play the guessing game with you\nI will think of a number between a low  and a high values generated by you\nand will allow you to guess until you get it.\nFor each guess, I will give you a hint whether the\nright answer is higher or lower than your guess.\n");
        for(int i = 0; i < 50; i++)
        {
            System.out.print("-");
        }

    }



    /* this method gets two numbers called guess and randNum
    if guess is greater than randNum then return "Lower"
    else if guess is less than randNum return "Higher"
    else return match*/

    public static String match(int guess, int randNum)
    {
        //if guess is greater than randNum then return "Lower"
        if(guess > randNum)
        {
            return "Lower";
        }
        //else if guess is less than randNum return "Higher"
        else if(guess < randNum)
        {
            return "Higher";
        }
        //else return match
        else
        {
            return "Match";
        }
    }
    /*
      this method displays the result on the screen.
      This method gets two parameters representing the number of the games the person
      played and the total guesses
      made for all the games played
    */
    public static void report(int numGames, int totGuesses)
    {
        //display the number of games played with numGames
        System.out.println("Number of games played: "+numGames);
        //display the total number of guesses per game with totGuesses
        System.out.println("Total number of guesses: "+totGuesses);
    }


    /*This method plays the game. it will generate a random number between min and max. */
    public static int funGame(Scanner console, int min, int max)
    {

        //1. create a Random class object
        Random rand = new Random();

        //2. Generate a random number between the given  min and max and store it in a variable.
        int randNum = rand.nextInt(max - min + 1) + min;


        //3. declare a variable to hold the user's guess, initialize it to zero
        int guess = 0;

        //4. declare a variable to hold the number of the guesses the person will make per game, set it to zero
        int numGuesses = 0;


        //5. flush the buffer
        console.nextLine();

        //6. prompt the user that I am thinking of a number between min and max. the actual min and max values must be displayed
        System.out.println("I am thinking of a number between "+min+" and "+max+".");

        //7. display the message saying give me a few seconds to think
        System.out.println("Give me a few seconds to think.");
        //then display press any key to continue
        System.out.println("Press any key to continue.");

        //8. flush the buffer
        console.nextLine();

        // while the user's guess does not equal the computer pick
        while(guess != randNum)
        {

            //increment numGuesses
            numGuesses++;


            //prompt the user to enter a  guess
            System.out.println("Enter your guess: \n ");

            //read the user's input and store the user's input in guess
            guess = console.nextInt();

            //call the  method match and store the return of this method in a variable called result
            String result = match(guess, randNum);

            //if the variable result contains "match"
            if(result.equals("Match"))

            {
                //display the congrats message
                System.out.println("Congratulations! You got it in "+numGuesses+" guesses.");
            }
            // else display the content of the variable result
            else
            {
                System.out.println(result);
            }

        }//end of while loop
        System.out.println();
        return numGuesses;

    }

    /*    LAST METHOD TO IMPLEMENT
    This method calls the other methods to get the game started.*/
    public static void action(Scanner console)
    {
        int numGames = 0; // total number of the games played by the person
        int totGuesses = 0; // total guesses for all the games played
        int min; // holds the min value entered by the user
        int max;//holds the max value entered by the user
        String repeat = "yes";
        while (repeat.equalsIgnoreCase("yes")) {// allows the player to play many rounds of the game

            //1. call the method prompt and pass the console, and s value to it, store the result in the variable min
            min = prompt(console);

            //2. call the method prompt and pass console, and s1 value to it, store the result in the variable max
            max = prompt(console);

            // while max is less than min
            while(max < min)
            {
                System.out.println("You entered an invalid value for max. Max must be greater than min. lets start all over again\n");
                //call the method prompt and pass  console and s
                min = prompt(console);

                //call the method prompt and pass console and s1
                max = prompt(console);

            }//end while
            //call the method funGame with the proper parameters and store the result in a variable called guesses
            int guesses = funGame(console, min, max);

            //add the guesses to totGuesses
            totGuesses += guesses;

            //increment numGames
            numGames++;

            //prompt the user if they want to play again or not
            System.out.println("Do you want to play again? (yes/no)");

            //read the user's respond in the variable repeat
            repeat = console.next();

            System.out.println();
        }
        //call the method report and pass numGames and totGuesses
        report(numGames, totGuesses);

    }
}